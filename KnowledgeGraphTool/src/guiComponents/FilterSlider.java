/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package guiComponents;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Peppe
 */
public class FilterSlider extends javax.swing.JPanel {
    /**
     * Creates new form FilterSlider
     */
    public FilterSlider() {
        rangeSliderValue2.setText(""+100);
        rangeSlider.setMinimum(0);
        rangeSlider.setMaximum(100);
        rangeSlider.setValue(0);
        rangeSlider.setUpperValue(100);
        // Add listener to update display.
        rangeSlider.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                RangeSlider slider = (RangeSlider) e.getSource();
                rangeSliderValue1.setText(String.valueOf(slider.getValue()));
                rangeSliderValue2.setText(String.valueOf(slider.getUpperValue()));
            }
        });
       
    }
    /*
     * Creates new form FilterSlider
    */
    public FilterSlider(int min, int max) {
        initComponents();
        rangeSliderValue2.setText(""+max);
        rangeSlider.setMinimum(min);
        rangeSlider.setMaximum(max);
        rangeSlider.setValue(min);
        rangeSlider.setUpperValue(max);
        // Add listener to update display.
        rangeSlider.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                RangeSlider slider = (RangeSlider) e.getSource();
                rangeSliderValue1.setText(String.valueOf(slider.getValue()));
                rangeSliderValue2.setText(String.valueOf(slider.getUpperValue()));
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rangeSliderLabel1 = new javax.swing.JLabel();
        rangeSliderValue1 = new javax.swing.JLabel();
        rangeSliderLabel2 = new javax.swing.JLabel();
        rangeSliderValue2 = new javax.swing.JLabel();
        rangeSlider = new guiComponents.RangeSlider();

        org.openide.awt.Mnemonics.setLocalizedText(rangeSliderLabel1, org.openide.util.NbBundle.getMessage(FilterSlider.class, "FilterSlider.rangeSliderLabel1.text")); // NOI18N

        rangeSliderValue1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(rangeSliderValue1, org.openide.util.NbBundle.getMessage(FilterSlider.class, "FilterSlider.rangeSliderValue1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(rangeSliderLabel2, org.openide.util.NbBundle.getMessage(FilterSlider.class, "FilterSlider.rangeSliderLabel2.text")); // NOI18N

        rangeSliderValue2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(rangeSliderValue2, org.openide.util.NbBundle.getMessage(FilterSlider.class, "FilterSlider.rangeSliderValue2.text")); // NOI18N
        rangeSliderValue2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        rangeSlider.setPaintLabels(true);
        rangeSlider.setPaintTicks(true);
        rangeSlider.setSnapToTicks(true);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(rangeSliderLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(rangeSliderValue1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 35, Short.MAX_VALUE)
                        .add(rangeSliderLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(rangeSliderValue2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(rangeSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rangeSliderLabel1)
                    .add(rangeSliderValue1)
                    .add(rangeSliderLabel2)
                    .add(rangeSliderValue2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rangeSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private guiComponents.RangeSlider rangeSlider;
    private javax.swing.JLabel rangeSliderLabel1;
    private javax.swing.JLabel rangeSliderLabel2;
    private javax.swing.JLabel rangeSliderValue1;
    private javax.swing.JLabel rangeSliderValue2;
    // End of variables declaration//GEN-END:variables

    public RangeSlider getRangeSlider(){
    	return rangeSlider;
    }
public void setUpperValue(int max){
        rangeSlider.setMaximum(max);
        rangeSlider.setUpperValue(max);
    	this.rangeSliderValue1.setText(String.valueOf(rangeSlider.getValue()));
        this.rangeSliderValue2.setText(String.valueOf(rangeSlider.getUpperValue()));
    }
}

